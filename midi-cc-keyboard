#!/usr/bin/env python3

import tkinter as tk
import rtmidi



# midi

midi_out = rtmidi.MidiOut()
midi_out_ports = midi_out.get_ports()

if midi_out_ports:
	midi_out.open_port(0)
else:
	midi_out.open_virtual_port("midi-cc-test")



# midi <-> gui glue

midi_channel = 1
def channel_slider_evt(data):
	global midi_channel

	midi_channel = int(data)
	print("midi_channel1="+str(midi_channel))

def slider_event(controller, data):
	global midi_channel

	# allow multiple channels
	msg = 0xB0 | (midi_channel-1)

	cc = [msg, controller, data]
	print("sending " + hex(cc[0]) + " " + hex(cc[1]) + " " + hex(cc[2]))
	midi_out.send_message(cc)



# gui

root = tk.Tk()
root.title("midi-cc-test")

top_content = tk.Frame(root)
top_content.grid(column=0, row=0)

content = tk.Frame(root)
content.grid(column=0, row=1)


# midi channel slider
w = tk.Label(top_content, text="MIDI Channel:")
w.grid(column=0, row=0)

w = tk.Scale(top_content, from_=1, to=16, orient=tk.HORIZONTAL, command=channel_slider_evt)
w.set(1)
w.grid(column=1, row=0)


# midi cc sliders
def slider(controller, row, col, label):
	evt_handler = lambda value : slider_event(controller, int(value))

	w = tk.Scale(content, from_=127, to=0, command=evt_handler)
	w.set(0)
	w.grid(column=col, row=(row*2)+1)

	w = tk.Label(content, text=label)
	w.grid(column=col, row=(row*2)+2)

rows = 4
cols = 24

for row in range(rows):
	for col in range(cols):
		ch = (cols*row)+col
		slider(ch, row, col, "CH" + str(ch))


root.mainloop()

